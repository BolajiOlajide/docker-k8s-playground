name: Sample Docker Frontend CI

on:
  workflow_dispatch:
  push:
    paths:
    - 'frontend/**'
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v2

      - name: Get the version
        id: commitSha
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})

      - name: Build tagged docker image
        run: docker build -f Dockerfile.dev . -t cooproton12/frontend-stuff

      - name: Run test
        run: docker run -e CI=true cooproton12/frontend-stuff npm run test

  deploy-to-eb:
    needs: test
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: ./frontend

    if: github.repository_owner == 'BolajiOlajide'

    steps:
      - uses: actions/checkout@v2

      - name: Create ZIP deployment package
        run: zip -r frontend.zip .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          # dont want this to work lol
          # aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: "eu-central-1"

      - name: Upload package to S3 bucket
        run: aws s3 cp frontend.zip s3://elasticbeanstalk-eu-central-1-231889911633/

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name frontend \
            --source-bundle S3Bucket="elasticbeanstalk-eu-central-1-231889911633",S3Key="frontend.zip" \
            --version-label "ver-${{ github.sha }}" \
            --description "commit-sha-${{ github.sha }}"

      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name frontend-env --version-label "ver-${{ github.sha }}"
